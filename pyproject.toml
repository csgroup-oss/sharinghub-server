[build-system]
requires = ["hatchling >= 1.21.0", "hatch-vcs >= 0.4.0 "]
build-backend = "hatchling.build"

# -----------------------------------------------
# Package infos

[project]
name = "app"
description = "Server of SharingHub"
authors = [
    { name = "CS Group" },
]
readme = "README.md"
license = { text = "Apache-2.0" }
requires-python = ">=3.11"
keywords = ["stac", "gitlab", "sharinghub"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: FastAPI",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "License :: OSI Approved :: Apache Software License",
]
dependencies = [
    "aiocache[memcached]",
    "aiohttp[speedups]",
    "authlib",
    "boto3",
    "fastapi",
    "httpx", # authlib
    "itsdangerous", # fastapi
    "markdown",
    "markdown-full-yaml-metadata",
    "pydantic", # fastapi
    "python-dotenv",
    "pyyaml",
    "shapely",
    "starlette", # fastapi
    "typing-extensions",
]
dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/csgroup-oss/sharinghub-server"
"Source" = "https://github.com/csgroup-oss/sharinghub-server/issues"
"Bug Tracker" = "https://github.com/csgroup-oss/sharinghub-server/issues"

[project.optional-dependencies]
dev = [
    "mypy",
    "pre-commit",
    "types-Markdown",
    "types-PyYAML",
    "uvicorn",
]
prod = [
    "uvicorn[standard]",
    "gunicorn",
]

# -----------------------------------------------
# Build & Packaging

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.hatch.version]
source = "vcs"
fallback-version = "0.1.0"

# -----------------------------------------------
# Linter & Format

[tool.mypy]
no_implicit_optional = true
ignore_missing_imports = true
show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true

[tool.ruff]
required-version = "0.4.5"
target-version = "py311"
line-length = 88

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 72

[tool.ruff.lint]
select = [
    "F", # PyFlakes
    "E", "W", # pycodestyle
    "C90", # mccabe
    "I", # isort
    "N", # pep8-naming
    "D", # pydocstyle
    "UP", # pyupgrade
    "ERA", # eradicate
    "PGH", # pygrep-hooks
    "PL", # Pylint
    "TRY", # tryceratops
    "FLY", # flint
    "PERF", # Perflint
    "RUF", # Ruff
    # flake8-* plugins
    "A", "ANN", "ARG", "ASYNC", "B", "BLE", "C4", "COM", "DTZ", "EM", "EXE", "FIX",
    "G", "ICN", "INP", "ISC", "PIE", "PYI", "Q", "RET", "RSE", "S", "SIM", "SLF",
    "T20", "TD", "TID",
]
ignore = [
    "ANN101", "ANN102", "COM812", "D100", "D101" ,"D102", "D103", "D104", "D105",
    "D106", "D107", "D203", "D213", "D301", "D417", "G004", "ISC001", "RET504",
    "TD002", "TD003", "TRY400", "TRY003",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]
"app/providers/client/gitlab.py" = ["N801", "N815"]
"resources/**/*.py" = ["INP001"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 13
max-branches = 15
max-statements = 60

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true
